### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec rofi-poweroff
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Switch to left/right workspace using $mod+[ and $mod+]
    # 0x5b -> ], 0x5d -> [
    bindsym --to-code {
        $mod+0x5b workspace prev_on_output
        $mod+0x5d workspace next_on_output
    }

    # Switch to left/right workspace $mod+Tab and $mod+Shift+Tab
    bindsym $mod+Tab workspace next_on_output
    bindsym $mod+Shift+Tab workspace prev_on_output

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    #

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+v or $mod+b, for horizontal and vertical splits
    # respectively.
    #
    # Configure split to match vim configuration
    bindsym $mod+v splitv
    bindsym $mod+b splith

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+z mark z; move scratchpad
    bindsym $mod+Shift+x mark x; move scratchpad
    bindsym $mod+Shift+c move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+z [con_mark="z"] scratchpad show
    bindsym $mod+x [con_mark="x"] scratchpad show
    bindsym $mod+c scratchpad show

#
# Function:
#
bindsym XF86AudioLowerVolume exec ~/.config/sway/volume.sh -5%
bindsym XF86AudioRaiseVolume exec ~/.config/sway/volume.sh +5%
bindsym XF86AudioMute        exec ~/.config/sway/volume.sh toggle
bindsym XF86AudioMicMute     exec ~/.config/sway/mic.sh toggle
bindsym XF86AudioPlay        exec playerctl play-pause
bindsym XF86AudioPause       exec playerctl play-pause
bindsym XF86AudioNext        exec playerctl next
bindsym XF86AudioPrev        exec playerctl previous
bindsym --locked XF86MonBrightnessUp exec light -T 1.4
bindsym --locked XF86MonBrightnessDown exec light -T 0.72

bindsym $mod+Delete exec rofi-poweroff
bindsym $mod+p exec bwmenu --clear 15 -- -width 50 -lines 20
bindsym $mod+n exec networkmanager_dmenu dmenu_command=rofi -width 25
bindsym $mod+u exec rofi-bluetooth &

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Screenshots:
#
set $screenshot_img $(date +'%Y-%m-%d-%T-grim.png')
set $screenshot_path ~/Pictures/Screenshots/$screenshot_img
set $mode_print (s) screen, (w) window, (a) area, (o) all outputs
mode "$mode_print" {
    bindsym s exec "grimshot save output $screenshot_path; wl-copy -t image/png < $screenshot_path", mode "default"
    bindsym w exec "grimshot copy window $screenshot_path", mode "default"
    bindsym a exec "grimshot copy area $screenshot_path", mode "default"
    bindsym o exec "grimshot save screen $screenshot_path", mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym Print mode "$mode_print"
